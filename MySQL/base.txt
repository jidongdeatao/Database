MySQL数据库基础入门：
    目录：
    1.安装与配置（参照文档）
    2.基本操作
    
    
    
    
    
    
    二、基本操作
    数据库的常见命令：
        创建数据库： CREATE DATABASE databasename；
        查看当前服务器下的数据库列表：show databases;
        查看某个数据库：show create database databasename；
        修改数据库的编码格式：alter database databasename character set = utf8;
        删除数据库： drop dateabase datebasename；
        显示当前已经打开的数据库：select database();
    
    数据库表的常见命令：
        创建数据表：create table tablename（column_name data_type,......);
        从某个数据库中查看其所有的数据表：show tables from databasename；
        从某个数据表中查看数据表结构：show columns from tablename；
        数据表的常用操作：
            1.基础
            增、删、改、查
            insert
            insert into tablename column_name vaules(expr...,) 
            或 insert into tablename set column_name =expr,... （这种方式与上面那种方式对比在于此方法可以使用子查询，只能插入一条数据)
            或 insert into tablename column_name select ...（此方法可以将查询结果插入到指定数据表) 
            detele
            delete from tablename where 条件；
            update
            update tabename set column_name1 = expr,...
            select
            对于where语句(条件表达式：对记录进行过滤，如果没有指定where子句，则显示所有记录)
                其后常见的参数:
                1）group by
                    查询结果分组 group by column_name|position ASC|DESC;(ASC是默认的升序，DESC是降序)
                    可带有having (分组条件)
                        having where_conditon 注意事项：聚合函数或条件出现在select条件中
                2）order by
                    对查询结果进行排序
                    
                3）limit 
                    限制查询结果返回的数量
                    limit 
            2.子查询与连接
              子查询是出现在其他sql语句内到select子句，如：select * from tablename wehere column1 = (select column2 from tablename2）
              子查询要嵌套在查询内部，且必须始终出现在圆括号内，子查询可以包含多个关键字或条件，如distinct、group by、order by、limit、函数等
              子查询等外层查询可以是：select、insert、update、set或do
                1）使用比较运算符的子查询 = > < >= <= <> != <=> 或ANY 、SOME、ALL修饰的运算符
                2）使用【NOT】IN的子查询  IN与ANY等效 ，NOT IN 与 ！=ALL 或<>ALL 运算符等效
                3）使用【NOT】EXISTS的子查询
              连接：
              MySQL在SELECT语句，多表更新、多表删除语句中支持JOIN操作
              连接类型；
                内连接（INNER JOIN）-交集、外连接 -并集
              连接条件：
                使用ON关键字来设定连接条件，也可以使用WHERE来代替。通常使用ON关键字来设定连接条件，使用WHERE关键字进行结果集记录的过滤
                多表连接：
                    外连接：（左外连接 -显示左表全部内容及右表符合连接条件的记录、右外连接 ）
                        A LEFT JOIN B join_condition
                            说明：1)数据表B的结果依赖数据表A 
                                 2)数据表A的结果集根据左连接条件依赖所有数据表(B表除外）
                                 3)左外连接条件决定如何检索数据表B（在没有指定WHERE条件的情况下）
                                 4)如果数据表A的多条记录符合WHERE条件，但是在数据表B不存在符合连接条件的记录，
                                    将生成一个所有列为空的额外的B行
               多表删除：                      
   
    MySQL的数据类型：
        #在设计表的时候时，是必须对表的coloum值的类型进行选择的
        整型、浮点型数据类型都有这个类型有符号值与无符号值的存储范围，字节数
        日期时间型与字符型有存储需求
        整型：TINYINT、SMALLINT、MEDIUMINT、INT、BIGINT
        浮点型：FLOAT[(M,D)] DOUBLE[(M,D)]
        日期时间型：YEAR、TIME、DATE、DATETIME、TIMESTAMP
        字符型：CHAR(M)、VARCHAR(M)、TINYTEXT、TEXT、MEDIUMTEXT、LONGTEXT、ENUM('value'...)、SET('value'...)
        
    MYSQL的函数：
        字符函数：concat() -字符连接 concat_ws() -使用指定的分隔符进行字符连接 format() -数字格式化
                lower() -转换成小写字母 upper() -转换成大写字母 left() -获取左侧字符 right() -获取右侧字符
                length() -获取字符串长度 ltrim() -删除前导空格 rtrim() -删除后续空格 trim() -删除前导和后续空格
                substing() -字符串截取 [not]like -模式匹配 replace() -字符串替换
        数值运算符与函数:ceil() -进一取整 div() -整数除法 floor() -舍一取整 mod -取余 
                       power() -幂运算 round() -四舍五入 truncate() -数字截取
        比较运算符与函数：[NOT] BETWEEN.. AND.. -(不)在范围内  [NOT] IN() -(不)在..里  IS [NOT] NULL
        日期时间函数：NOW() -当前日期和时间   CURDATE() -当前日期 CURTIME -当前时间
                   DATE_ADD() -日期变化   DATEDIFF() -日期差值 DATE_FORMAT() -日期格式化
        信息函数：CONNECTION_ID() -连接ID 
                 DATEBASE() -当前数据库 
                 LAST_INSERT_ID() 最后插入的ID（注意多行插入，只返回第一个ID）
                 USER() -用户
                 VERSION() -版本信息
        聚合函数：AVG() -平均值 COUNT() -计数 MAX() -最大值 MIN() -最小值 SUM() -求和
        加密函数：MD5() -信息摘要算法 PASSWORD() -密码算法 
        创建自定义的函数：create function function_name returns {string|integer|real|decimal} routine_body;
            关于函数体：1）函数体由合法的sql语句构成 2）函数体可以是简单的select或insert语句
                      3）函数体如果为复合结构则使用begin..end语句
                      4）复合结构可以包含声明，循环，控制结构
        创建不带参数的自定义函数
        创建带有参数的自定义函数
        创建具有复合结构的函数体的自定义函数
        删除函数：drop function [if exists] functionname;
    
    
    
    修改MySQL提示符方式两种：
    1）连接上客户端后，通过prompt提示符，即mysql > prompt 提示符
    2）shell > mysql -uroot -proot --prompt 提示符
    
    
    
    
    
    
    
    

慕课网免费入门视频 ：《与MySQL零距离接触》
https://www.imooc.com/learn/122
